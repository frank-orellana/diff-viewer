
diff --git a/ttt/__custom/ooo/css/ooo_estilo_ttt.css b/ttt/__custom/ooo/css/ooo_estilo_ttt.css
new file mode 100644
index 00000000..0e978668
--- /dev/null
+++ b/ttt/__custom/ooo/css/ooo_estilo_ttt.css
@@ -0,0 +1,33 @@
+div.scoPageHeader div {
+	float: left;
+}
+
+div.scoPageHeader div.fill {
+	width: 100%;
+}
+
+div.scoMenuLeft ul {
+	padding-left: 6px;
+	padding-inline-start: 6px;
+}
+
+div.scoMenuLeft div.content_1 li{
+	text-indent:0;
+}
+
+div.scoMenuLeft p.title{
+	margin: 18px 0 0 6px;
+	float:left;
+}
+
+div.scoMenuLeft div.withSubMenu{
+	width: 100%;
+}
+
+li.withSubMenu div{
+	float:left;
+}
+
+div.divright {
+	float:left;
+}
\ No newline at end of file
diff --git a/ttt/__custom/ooo/libreria/funciones_ttt.js b/ttt/__custom/ooo/libreria/funciones_ttt.js
index 12e4b1ed..a692d72d 100644
--- a/ttt/__custom/ooo/libreria/funciones_ttt.js
+++ b/ttt/__custom/ooo/libreria/funciones_ttt.js
@@ -9,25 +9,20 @@ function addEvent(evnt, elem, func) {
 	}
 }
 
-try{
-	window._open = window.open; 
-	window.open = function(url,name,params){
-		var html = "<html><head><title>Visualización Documento</title>";
-		html += "</head><body style='margin: 0;'>";
-		html += "<iframe height='100%' width='100%' src='" + url +"'></iframe>";
-		html += "</body></html>";
-		win = window._open("", name, params);
-		win.document.write(html);
-		if(parent.ooo_openedWindows != null){
-			parent.ooo_openedWindows.push(win);
-		}else if(parent.parent.ooo_openedWindows != null){
-			parent.parent.ooo_openedWindows.push(win);
-		}
-		win.focus();
-		return win;
+function oooOpenDialog(url,name,params){
+	var html = "<html><head><title>Visualización Documento</title>";
+	html += "</head><body style='margin: 0;'>";
+	html += "<iframe height='100%' width='100%' src='" + url +"'></iframe>";
+	html += "</body></html>";
+	win = window.open("", name, params);
+	win.document.write(html);
+	if(parent.ooo_openedWindows != null){
+		parent.ooo_openedWindows.push(win);
+	}else if(parent.parent.ooo_openedWindows != null){
+		parent.parent.ooo_openedWindows.push(win);
 	}
-}catch(e){
-	alert('Error: '+ e.m___age);
+	win.focus();
+	return win;
 }
 
 
@@ -206,7 +201,7 @@ function __opendialog(url, width, height) {
 				this.top = window.screenY + ((window.outerHeight - this.height) / 2);
 				var attr = "screenX=" + this.left + ",screenY=" + this.top + ",resizable=yes,scrollbars=yes,width=" + this.width + ",height=" + this.height;
 			// Genero el dialogo y me aseguro de que tiene el foco
-				this.win= window.open(this.url, this.name, attr);
+				this.win= oooOpenDialog(this.url, this.name, attr);
 
 		
 }
@@ -295,11 +290,40 @@ function __titulo() {
 var ztitulo = document.title;
 return (ztitulo);
 }
-//***************************
-//FUNCION: __fechahoy
-//FECHA:
-//COMENTARIOS: Devuelve la fecha de hoy en dd-mm-yyyy
-//***************************	
+
+
+
+
+
+
+function __date_usu(dianumero,mesnumero,anio){
+var oreM = /M/i;
+var oreD = /D/i;
+var strdianumero = new String(dianumero); 
+if (strdianumero.length != 2){strdianumero = '0' + strdianumero;}
+var strmesnumero = new String(mesnumero);
+if (strmesnumero.length != 2){strmesnumero = '0' + strmesnumero;}
+
+	var scaracterinicial = sformatofechas.substring(0,1);
+		if (scaracterinicial =="D" || scaracterinicial =="d"){
+			if (sformatofechas.search(oreM) == 3 ) {
+			var sfechasec = strdianumero + g_tttpfechas + strmesnumero + g_tttpfechas+ anio;
+			}else{var sfechasec = strdianumero + g_tttpfechas + anio + g_tttpfechas + strmesnumero;}
+		}
+		if (scaracterinicial =="M"|| scaracterinicial =="m"){
+			if (sformatofechas.search(oreD) == 3 ){
+			var sfechasec = strmesnumero + g_tttpfechas + strdianumero + g_tttpfechas+ anio;
+			}else{var sfechasec = strmesnumero + g_tttpfechas+ anio + g_tttpfechas + strdianumero;}
+		}
+		if (scaracterinicial =="Y" || scaracterinicial =="y"){
+			if (sformatofechas.search(oreD) == 5 ){
+			var sfechasec = anio + g_tttpfechas + strdianumero + g_tttpfechas + strmesnumero;
+			}else{var sfechasec = anio + g_tttpfechas + strmesnumero + g_tttpfechas + strdianumero;}
+		}
+	return sfechasec;
+}
+
+
 function __fechahoy(){	
 	 var d = new Date();	
 	 var s = new Date();	 
@@ -908,5 +932,74 @@ function __urlencode(str) {
 return escape(str).replace(/\+/g,'%2B').replace(/%20/g, '+').replace(/\*/g, '%2A').replace(/\//g, '%2F').replace(/@/g, '%40');
 }
 
+function __splitdate(sdate,adateinfo){
+var oreM = /M/i;var oreD = /D/i;var oreY = /Y/i;var oresep = g_tttpfechas;  
+var ap= new Array();
+var ny = sformatofechas.search(oreY);
+var nm = sformatofechas.search(oreM);
+var nd = sformatofechas.search(oreD);
+ap[ny] = "Y";ap[nm] = "M";ap[nd] = "D";
+var max = Math.max(Math.max(ny,nm),nd);
+if (max == ny) {var med= Math.max(nm,nd);var min=Math.min(nm,nd);}
+if (max == nm) {var med= Math.max(ny,nd);var min=Math.min(ny,nd);}
+if (max == nd) {var med= Math.max(ny,nm);var min=Math.min(ny,nm);}  
+var ocadena = new String(sdate);
+var atrozos = ocadena.split(oresep);
+var sday = "";
+
+if (ap[min] == "Y"){
+    syear = atrozos[0].toString();
+	if (ap[med] == "M"){smonth =  atrozos[1].toString(); sday = atrozos[2].toString();}
+	if (ap[med] == "D"){smonth =  atrozos[2].toString();sday = atrozos[1].toString();} 
+}
+if (ap[min] == "M"){
+	smonth = atrozos[0].toString();
+	if (ap[med] == "D"){sday = atrozos[1].toString(); syear =atrozos[2].toString();}
+	if (ap[med] == "Y"){sday = atrozos[2].toString();  syear =atrozos[1].toString();} 
+} 
+if (ap[min] == "D"){
+	sday = atrozos[0].toString();
+	if (ap[med] == "Y"){syear =atrozos[1].toString();smonth =  atrozos[2].toString();}
+	if (ap[med] == "M"){syear =atrozos[2].toString();smonth =  atrozos[1].toString();} 
+}
+
+
+
+   adateinfo[0] = sday;
+
+   adateinfo[1] = smonth;
+   adateinfo[2] = syear;
+
+return;
+}
+
+function __builtdate(dianumero,mesnumero,anio){
+var oreM = /M/i;var oreD = /D/i;var oreY = /Y/i;var oresep = g_tttpfechas;  
+	//Correccion para el dia y mes con una sola cifra, ejemplo: 1=01
+    var strdianumero = new String(dianumero); 
+	if (strdianumero.length != 2){strdianumero = '0' + strdianumero;}
+	var strmesnumero = new String(mesnumero);
+	if (strmesnumero.length != 2){strmesnumero = '0' + strmesnumero;}
+	//Construccion de la fecha segun el formato
+
+	var scaracterinicial = sformatofechas.substring(0,1);
+
+		if (scaracterinicial =="D" || scaracterinicial =="d"){
+			if (sformatofechas.search(oreM) == 3 ) {
+			var sfechasec = strdianumero + g_tttpfechas + strmesnumero + g_tttpfechas+ anio;
+			}else{var sfechasec = strdianumero + g_tttpfechas + anio + g_tttpfechas + strmesnumero;}
+		}
+		if (scaracterinicial =="M"|| scaracterinicial =="m"){
+			if (sformatofechas.search(oreD) == 3 ){
+			var sfechasec = strmesnumero + g_tttpfechas + strdianumero + g_tttpfechas+ anio;
+			}else{var sfechasec = strmesnumero + g_tttpfechas+ anio + g_tttpfechas + strdianumero;}
+		}
+		if (scaracterinicial =="Y" || scaracterinicial =="y"){
+			if (sformatofechas.search(oreD) == 5 ){
+			var sfechasec = anio + g_tttpfechas + strdianumero + g_tttpfechas + strmesnumero;
+			}else{var sfechasec = anio + g_tttpfechas + strmesnumero + g_tttpfechas + strdianumero;}
+		}
+	return sfechasec;
+}
 
 
diff --git a/ttt/__custom/ooo/libreria/functions_portal.js b/ttt/__custom/ooo/libreria/functions_portal.js
new file mode 100644
index 00000000..84048c86
--- /dev/null
+++ b/ttt/__custom/ooo/libreria/functions_portal.js
@@ -0,0 +1,1005 @@
+//Original code file: functions_portal.raw.js
+//Use the above mentioned file for modifications or debugging.
+
+var test = {};
+test.portal = function () {
+	var b___ = true,
+	bMenuBlocked = false,
+	iMenuWrapperWidth,
+	iContentWrapperLeft,
+	iOffsetHeigth = 0,
+	iOffsetWidth = 0,
+	oContentWrapper,
+	oMenuWrapper,
+	oPortal,
+	sUrlLogin,
+	sUrlPortal___ = '../ttttgenerico/ssco_portal.jsp',
+	sUrlPortalyyy = '../yyy_generico/smco_portal.jsp',
+	sUrlPutObject = '../ttttgenerico/tttttput_object.jsp';
+	function updateOffset() {
+		try {
+			iOffsetHeigth = document.body.offsetHeigth;
+			iOffsetWidth = document.body.offsetWidth;
+		} catch (e) {
+			iOffsetHeigth = 0;
+			iOffsetWidth = 0;
+		}
+	}
+	function init(ai_oPortal, ai_oMenuWrapper, ai_oMenu, ai_oContentWrapper, ai_sUrlLogin, ai_b___) {
+		oPortal = ai_oPortal;
+		oMenuWrapper = ai_oMenuWrapper;
+		oMenu = ai_oMenu;
+		oContentWrapper = ai_oContentWrapper;
+		sUrlLogin = ai_sUrlLogin;
+		b___ = ai_b___;
+		updateOffset();
+		iMenuWrapperWidth = oMenuWrapper.offsetWidth;
+		iContentWrapperLeft = +oContentWrapper.getStyle('__marginLeftMenu');
+	}
+	return {
+		init: function (ai_oPortal, ai_oMenuWrapper, ai_oMenu, ai_oContentWrapper, ai_sUrlLogin, ai_b___) {
+			init(ai_oPortal, ai_oMenuWrapper, ai_oMenu, ai_oContentWrapper, ai_sUrlLogin, ai_b___);
+		},
+		init___: function (ai_oPortal, ai_sUrlLogin) {
+			init(ai_oPortal, ai_sUrlLogin, true);
+		},
+		inityyy: function (ai_oPortal, ai_sUrlLogin) {
+			init(ai_oPortal, ai_sUrlLogin, false);
+		},
+		changePortal: function () {
+			test.frameBody.setEventTakenCareOf();
+			var sNewsURL = (b___) ? sUrlPortalyyy : sUrlPortal___;
+			if (test.IE6) {
+				window.location = sNewsURL;
+			} else {
+				window.location.href = sNewsURL;
+			}
+		},
+		get___: function () {
+			return b___;
+		},
+		offsetChanged: function () {
+			var bResult = false;
+			try {
+				if (iOffsetHeigth !== document.body.offsetHeigth || iOffsetWidth !== document.body.offsetWidth) {
+					bResult = true;
+					updateOffset();
+				}
+			} catch (e) {
+				iOffsetHeigth = 0;
+				iOffsetWidth = 0;
+			}
+			return bResult;
+		},
+		setMinWidth: function (ai_iWidth) {
+			var iCurrentWidth = 0;
+			iCurrentWidth = oPortal.scrollWidth + oPortal.offsetWidth - oPortal.clientWidth;
+			if (iCurrentWidth < ai_iWidth) {
+				oPortal.style.width = String(ai_iWidth) + 'px';
+			}
+		},
+		setMaxWidth: function () {
+			oPortal.style.width = '100%';
+		},
+		showLogin: function () {
+			if (sUrlLogin) {
+				window.location.pathname = sUrlLogin;
+			}
+		},
+		toggleMenu: function (ev) {
+			var bMenuVisible = (oMenuWrapper.clientHeight !== 0),
+			fxWrapper = new Fx.Tween(oMenuWrapper, {
+					duration: 750
+				}),
+			fxElement = new Fx.Tween(oMenu, {
+					duration: 750
+				}),
+			fxContent = new Fx.Tween(oContentWrapper);
+			if (ev) {
+				ev.preventDefault();
+			}
+			if (!bMenuBlocked) {
+				bMenuBlocked = true;
+				test.ajax.sendAsync(sUrlPutObject, [['sId', 'tttttIND_SHOW_MENU'], ['sValue', !bMenuVisible]]);
+				if (bMenuVisible) {
+					fxWrapper.start('height', 0);
+					fxElement.start('margin-top', -oMenuWrapper.clientHeight);
+					fxWrapper.addEvent('complete', function () {
+						fxContent.start('margin-left', -10);
+						fxContent.addEvent('complete', function () {
+							bMenuBlocked = false;
+							$('hideMenu').addClass('hidden');
+							$('showMenu').removeClass('hidden');
+						});
+					});
+				} else {
+					oMenu.setStyle('margin-top', -oMenu.clientHeight);
+					fxContent.start('margin-left', iContentWrapperLeft);
+					fxContent.addEvent('complete', function () {
+						fxWrapper.start('height', null);
+						fxElement.start('margin-top', 0);
+						fxWrapper.addEvent('complete', function () {
+							bMenuBlocked = false;
+							$('showMenu').addClass('hidden');
+							$('hideMenu').removeClass('hidden');
+						});
+					});
+				}
+				bMenuVisible = !bMenuVisible;
+			}
+		}
+	};
+}
+();
+test.menu = function () {
+	var b___ = true,
+	bNavigate = false,
+	oAccordion = [],
+	oDivWait,
+	oLastResponse,
+	sDeleteOperation = 'Delete',
+	sLastUrl,
+	sPathFavourites,
+	sUrlCheckLink = '/servlet/CheckSecurity/JSP/ttttgenerico/tttttmenu_back.jsp',
+	sUrlDeleteFavourite = '/servlet/CheckSecurity/JSP/ttttgenerico/tttttfavourite_back.jsp';
+	function addAccordion(ai_oAccordion) {
+		oAccordion[oAccordion.length] = ai_oAccordion;
+	}
+	function activateAccordion(ai_sPath) {
+		var i,
+		saPath;
+		if (ai_sPath && ai_sPath !== '') {
+			saPath = ai_sPath.split(/;/g);
+			for (i = 0; i < saPath.length; i++) {
+				if (oAccordion[i].elements[+saPath[i]].offsetHeight === 0) {
+					oAccordion[i].display(+saPath[i]);
+				}
+			}
+		}
+	}
+	function showFavourites() {
+		activateAccordion(sPathFavourites);
+	}
+	function destroyObject(ai_oObject) {
+		ai_oObject.destroy();
+	}
+	return {
+		init: function (ai_oDivWait, ai_bUseFirstMenuOption) {
+			var heightValue = (window.ie6) ? '100%' : '',
+			togglerName = 'div.scoMenuLeft div.title_',
+			togglerSubName = 'div.scoMenuLeft span.title_',
+			contentName = 'div.scoMenuLeft div.content_',
+			counter = 1,
+			togglers = $$(togglerName + counter),
+			contents = $$(contentName + counter);
+			oDivWait = ai_oDivWait;
+			b___ = test.portal.get___();
+			sPathFavourites = (togglers.length >= 2) ? String(togglers.length - 2) + ';' : '';
+			togglers.each(function (ai_oToggler) {
+				ai_oToggler.addClass('__activeColor');
+				ai_oToggler.activeColor = ai_oToggler.getStyle('color');
+				ai_oToggler.removeClass('__activeColor');
+				ai_oToggler.origColor = ai_oToggler.getStyle('color');
+				ai_oToggler.fx = new Fx.Tween(ai_oToggler, 'color');
+			});
+			while (togglers.length > 0) {
+				addAccordion(new Accordion(togglers, contents, {
+						opacity: false,
+						alwaysHide: (counter !== 1),
+						start: 'all-closed',
+						onComplete: function () {
+							var element = $(this.elements[this.previous]);
+							if (element && element.offsetHeight > 0) {
+								element.setStyle('height', heightValue);
+							};
+						},
+						onActive: function (toggler, content) {
+							if (toggler.fx != null) {
+								toggler.fx.start('color', toggler.activeColor);
+							}
+							toggler.removeClass('divImgClosed');
+							toggler.addClass('divImgOpen');
+						},
+						onBackground: function (toggler, content) {
+							if (toggler.fx != null) {
+								toggler.fx.start('color', toggler.origColor);
+							}
+							toggler.removeClass('divImgOpen');
+							toggler.addClass('divImgClosed');
+						}
+					}));
+				counter++;
+				togglers = $$(togglerSubName + counter);
+				contents = $$(contentName + counter);
+			}
+		},
+		interceptEvent: function (ev) {
+			if(!ev)ev=event;
+			var sUrl,
+			oResponse;
+			if (ev.type === 'click' && ev.target.tagName === 'A') {
+				if (ev.target.protocol === 'mailto:') {}
+				else if (ev.target.protocol === 'javascript:') {}
+				else {
+					sUrl = '';
+					if (Browser.Engine.name == 'trident' || Browser.Engine.name == 'presto') {
+						sUrl = '/';
+					}
+					sUrl = sUrl + ev.target.pathname + ev.target.search;
+					oResponse = test.menu.validateUrl(sUrl);
+					if (oResponse) {
+						switch (oResponse.result) {
+						case '1':
+							test.frameBody.setLoadMode(sUrl);
+							break;
+						case '-1':
+							test.portal.changePortal();
+							break;
+						case '':
+							test.frameBody.setLoadMode(sUrl);
+							break;
+						case '0':
+							break;
+						default:
+						}
+						ev.preventDefault();
+					}
+				}
+			}
+		},
+		activateAccordion: function (ai_sPath) {
+			activateAccordion(ai_sPath);
+		},
+		validateUrl: function (ai_sUrl) {
+			if (sLastUrl !== ai_sUrl) {
+				sLastUrl = ai_sUrl;
+				test.ajax.sendSyncJSON(sUrlCheckLink, [['sUrl', ai_sUrl], ['b___', b___]]);
+				oLastResponse = test.ajax.getResponseJSON();
+			}
+			return oLastResponse;
+		},
+		compareToLastValidatedUrl: function (ai_sUrl) {
+			var oResponse;
+			if (ai_sUrl !== sLastUrl && sLastUrl !== undefined) {
+				oResponse = this.validateUrl(ai_sUrl);
+				if (oResponse) {
+					switch (oResponse.result) {
+					case '1':
+						this.activateAccordion(oResponse.path);
+						break;
+					case '-1':
+						test.portal.changePortal();
+						break;
+					case '0':
+						break;
+					default:
+					}
+				}
+			}
+		},
+		setUrl___: function (ai_sUrl) {
+			test.ajax.sendSync(sUrlCheckLink, [['sNextUrl', ai_sUrl], ['b___', true]]);
+		},
+		setUrlyyy: function (ai_sUrl) {
+			test.ajax.sendSync(sUrlCheckLink, [['sNextUrl', ai_sUrl], ['b___', false]]);
+		},
+		navigate: function (ai_sUrl) {
+			test.frameBody.setEventTakenCareOf();
+			test.frameBody.setLoadMode(ai_sUrl);
+		},
+		getNavigate: function () {
+			return bNavigate;
+		},
+		addFavourite: function (ai_iOrdinal, ai_sTitle, ai_sUrl) {
+			var oTemplateLI = $('favouriteLiTemplate'),
+			oFavouriteUL = $('menuLeftFavouritesUL'),
+			oFavouriteLI,
+			oFavouriteLiDiv,
+			oFx;
+			if (oTemplateLI) {
+				try {
+					oFavouriteLI = oTemplateLI.clone();
+					oFavouriteLI.id = 'favourite' + String(ai_iOrdinal);
+					oFavouriteLiDiv = oFavouriteLI.childNodes[0];
+					oFavouriteLiDiv.childNodes[0].title = ai_sTitle;
+					oFavouriteLiDiv.childNodes[0].href = ai_sUrl;
+					oFavouriteLiDiv.childNodes[0].childNodes[0].data = ai_sTitle;
+					oFavouriteUL.appendChild(oFavouriteLI);
+					oFavouriteLiDiv.childNodes[1].addEvent('click', function () {
+						test.menu.deleteFavourite(ai_iOrdinal);
+					});
+					oFx = new Fx.Morph(oFavouriteLiDiv, {
+							duration: 1000,
+							link: 'chain'
+						});
+					oFx.set({
+						'opacity': 0
+					});
+					oFx.start.pass({
+						'opacity': 1
+					}, oFx).delay(500);
+				} catch (e) {}
+				showFavourites();
+			}
+		},
+		modifyFavourite: function (ai_iOrdinal, ai_sTitle) {
+			var oLI = $('favourite' + String(ai_iOrdinal)),
+			oFx;
+			if (oLI) {
+				try {
+					oLI.childNodes[0].childNodes[0].title = ai_sTitle;
+					oLI.childNodes[0].childNodes[0].childNodes[0].data = ai_sTitle;
+					showFavourites();
+					oFx = new Fx.Tween(oLI, {
+							property: 'opacity',
+							duration: 500,
+							link: 'chain'
+						});
+					oFx.start.pass(0.2, oFx).delay(500);
+					oFx.start.pass(1, oFx).delay(600);
+				} catch (e) {}
+			}
+		},
+		deleteFavourite: function (ai_iOrdinal) {
+			var oLI = $('favourite' + String(ai_iOrdinal)),
+			oResponse = null,
+			oFx;
+			if (oLI) {
+				test.ajax.sendSyncJSON(sUrlDeleteFavourite, [['sOperation', sDeleteOperation], ['sOrdinal', String(ai_iOrdinal)]]);
+				oResponse = test.ajax.getResponseJSON();
+				if (oResponse && oResponse.result === 0) {
+					oFx = new Fx.Morph(oLI, {
+							duration: 400
+						}).start({
+							'opacity': 0
+						});
+					destroyObject.pass(oLI).delay(400);
+				}
+			}
+		}
+	};
+}
+();
+test.menu.search = function () {
+	var bUpdateS___ion = false,
+	bClearOnly = false,
+	htmlMinLength,
+	htmlNoSearch,
+	minLength = 2,
+	oForm = undefined,
+	oInput = undefined,
+	oResult = undefined,
+	previousCriterion,
+	textInitialString;
+	function clearServer() {
+		if (bUpdateS___ion) {
+			bUpdateS___ion = false;
+			if (oInput.value === textInitialString || oInput.value.length < minLength) {
+				bClearOnly = true;
+				oForm.send();
+			}
+		}
+	}
+	return {
+		init: function (ai_oForm, ai_oInput, ai_oResult, ai_sInitialString, ai_htmlMinLength, ai_htmlNoSearch, ai_sCriterion) {
+			oForm = ai_oForm;
+			oInput = ai_oInput;
+			oResult = ai_oResult;
+			textInitialString = ai_sInitialString;
+			htmlMinLength = ai_htmlMinLength;
+			htmlNoSearch = ai_htmlNoSearch;
+			oInput.value = ai_sCriterion || ai_sInitialString;
+			bUpdateS___ion = (ai_sCriterion) ? true : false;
+			if (oForm) {
+				oForm.addEvent('submit', function (ev) {
+					ev.preventDefault();
+				});
+				oForm.set('send', {
+					onComplete: function (response) {
+						if (bClearOnly) {
+							bClearOnly = false;
+						} else {
+							oResult.removeClass('scoSpinner').set('html', response);
+						}
+					}
+				});
+			}
+		},
+		clear: function () {
+			if (oInput.value === textInitialString) {
+				oInput.value = '';
+				oResult.empty().set('html', htmlMinLength);
+			} else {
+				oInput.select();
+				this.search();
+			}
+			oInput.removeClass('inactive');
+		},
+		restore: function () {
+			clearServer();
+			if (oInput.value === '' || oInput.value === textInitialString) {
+				oInput.value = textInitialString;
+				oInput.addClass('inactive');
+				oResult.empty().set('html', htmlNoSearch);
+			}
+		},
+		search: function () {
+			var criterion = oInput.value.replace(/^\s\s*/, '').replace(/\s\s*$/, '');
+			if (criterion.length >= minLength) {
+				if (criterion !== previousCriterion) {
+					previousCriterion = criterion;
+					oResult.empty().addClass('scoSpinner');
+					bUpdateS___ion = true;
+					oForm.send();
+				}
+			} else {
+				bUpdateS___ion = true;
+				oResult.empty().removeClass('scoSpinner').set('html', htmlMinLength);
+				previousCriterion = criterion;
+			}
+		},
+		getCriterion: function () {
+			return (oInput.value !== textInitialString) ? oInput.value : null;
+		}
+	};
+}
+();
+test.header = function () {
+	var oButtonAddFavourite,
+	sOperationAdd = 'Add',
+	sUrlHome,
+	sUrlAddFavourite = '/servlet/CheckSecurity/JSP/ttttgenerico/tttttfavourite_back.jsp',
+	sUrlLogout = '/servlet/CheckSecurity/JSP/ttttgenerico/ttttlogout.jsp',
+	sUrlWhoIsWho = '/servlet/CheckSecurity/JSP/ttttg0/ttttg0_buscar_contactos.jsp';
+	return {
+		init: function (ai_sUrlHome, ai_oButtonAddFavourite) {
+			sUrlHome = ai_sUrlHome;
+			oButtonAddFavourite = ai_oButtonAddFavourite;
+		},
+		home: function () {
+			if (sUrlHome) {
+				test.frameBody.setLoadMode(sUrlHome);
+			}
+		},
+		whoIsWho: function () {
+			test.menu.setUrl___(sUrlWhoIsWho);
+			if (test.portal.get___()) {
+				test.frameBody.setLoadMode(sUrlWhoIsWho);
+				test.frameBody.updateSrc(sUrlWhoIsWho);
+			} else {
+				test.portal.changePortal();
+			}
+		},
+		addFavourite: function () {
+			var sTitle = test.frameBody.getTitle(),
+			sUrl = test.frameBody.getLocation(),
+			oResponse = null,
+			oFx;
+			if (sTitle && sUrl) {
+				test.ajax.sendSyncJSON(sUrlAddFavourite, [['sOperation', sOperationAdd], ['sUrl', sUrl], ['sName', sTitle]]);
+				oResponse = test.ajax.getResponseJSON();
+				if (oResponse) {
+					if (oResponse.result < 0) {
+						test.menu.modifyFavourite(-1 * oResponse.result, sTitle);
+					} else if (oResponse.result > 0) {
+						test.menu.addFavourite(oResponse.result, sTitle, sUrl);
+					}
+				}
+				oFx = new Fx.Morph(oButtonAddFavourite, {
+						duration: 500,
+						link: 'chain'
+					});
+				oFx.start({
+					'opacity': 0.2
+				}).start({
+					'opacity': 1
+				});
+			}
+		},
+		iconHot: function (ai_oImgTag) {
+			if (ai_oImgTag.__SrcHot) {
+				ai_oImgTag.src = ai_oImgTag.__SrcHot;
+			}
+		},
+		iconNormal: function (ai_oImgTag) {
+			if (ai_oImgTag.__SrcNormal) {
+				ai_oImgTag.src = ai_oImgTag.__SrcNormal;
+			}
+		},
+		beforeLoad: function () {},
+		afterLoad: function () {},
+		changePortal: function () {
+			test.portal.changePortal();
+		},
+		logout: function () {
+			test.frameBody.setEventTakenCareOf();
+			if (test.IE6) {
+				window.location = sUrlLogout;
+			} else {
+				window.location.href = sUrlLogout;
+			}
+		}
+	};
+}
+();
+test.frameBody = function () {
+	var b___ = true,
+	bEventTakenCareOf = false,
+	iContentScrollHeigth = 0,
+	iContentScrollWidth = 0,
+	oDivWait,
+	oFrame,
+	sCurrentPathname,
+	sDefaultHeight = '600',
+	sParam___ = 'sgcoPortal___',
+	sParamUrl = 'sgcoPortalDestinationUrl',
+	sUrlGenericUpdate = '/servlet/CheckSecurity/JSP/ttttgenerico/generico_actualizar.jsp',
+	sUrlLogin = '/ttttgenerico/generico_login.jsp',
+	sUrlPortal___ = '/servlet/CheckSecurity/JSP/ttttgenerico/ssco_portal.jsp',
+	sUrlPortalyyy = '/servlet/CheckSecurity/JSP/yyy_generico/smco_portal.jsp',
+	sUrlRestoreRequest = '/servlet/CheckSecurity/JSP/ttttgenerico/tttttrestore_request.jsp',
+	sUrlStoreRequest = '/servlet/CheckSecurity/JSP/ttttgenerico/tttttmenu_back.jsp';
+	function setLoadMode(sWhere) {
+		var oFx;
+		oFx = new Fx.Morph(oFrame, {
+				duration: 100
+			}).start({
+				'opacity': 0.1
+			}).chain(function () {
+				if (sWhere) {
+					test.frameBody.updateSrc(sWhere)
+				}
+			});
+		oDivWait.removeClass('displayNone');
+		bEventTakenCareOf = true;
+		test.header.beforeLoad();
+	}
+	function reverseLoadMode() {
+		oDivWait.addClass('scoSpinnerRev');
+		bEventTakenCareOf = true;
+	}
+	function resetLoadMode() {
+		var oFx;
+		oDivWait.addClass('displayNone');
+		oDivWait.removeClass('scoSpinnerRev');
+		test.frameBody.resize();
+		oFx = new Fx.Morph(oFrame, {
+				duration: 100
+			}).start({
+				'opacity': 1
+			}).chain(function () {
+				test.header.afterLoad()
+			});
+	}
+	function formSubmit(ai_oForm) {
+		var bSubmitForm = true,
+		oForm,
+		sUrl,
+		sPathName;
+		if (!ai_oForm.target) {
+			sUrl = (ai_oForm.action);
+			sPathName = sUrl.toLowerCase().substring(0, sUrl.toLowerCase().indexOf('.jsp')) + '.jsp';
+			setLoadMode();
+			if ((oFrame.contentWindow.location.pathname).toLowerCase() !== sPathName) {
+				oForm = new Element(ai_oForm);
+				oForm.set('send', {
+					url: sUrlStoreRequest,
+					async: false,
+					onComplete: function (response) {
+						var oResponse = JSON.decode(response, true);
+						if (oResponse) {
+							switch (oResponse.result) {
+							case '1':
+								test.menu.activateAccordion(oResponse.path);
+								break;
+							case '-1':
+								test.portal.changePortal();
+								bSubmitForm = false;
+								break;
+							case '0':
+								break;
+							default:
+							}
+						}
+					}
+				});
+				oForm.send(sUrlStoreRequest + '?' + sParam___ + '=' + b___ + '&' + sParamUrl + '=' + encodeURIComponent(sUrl));
+			}
+		}
+		return bSubmitForm;
+	}
+	return {
+		init: function (ai_oDivWait, ai_oFrame) {
+			oDivWait = ai_oDivWait;
+			oFrame = ai_oFrame;
+			b___ = test.portal.get___();
+		},
+		setLoadMode: function (sWhere) {
+			setLoadMode(sWhere);
+		},
+		resetLoadMode: function () {
+			resetLoadMode();
+		},
+		getLocation: function () {
+			var sLocation = null;
+			try {
+				sLocation = oFrame.contentWindow.location.pathname + oFrame.contentWindow.location.search;
+			} catch (e) {}
+			return sLocation;
+		},
+		getTitle: function () {
+			return oFrame.contentWindow.document.title;
+		},
+		getSrc: function () {
+			return oFrame.src || null;
+		},
+		updateSrc: function (ai_sUrl) {
+			if (ai_sUrl) {
+				oFrame.src = ai_sUrl;
+			}
+		},
+		afterLoad: function () {
+			var aoChildNodes,
+			aoForms,
+			bKeepGoing,
+			i,
+			oResponse,
+			sLocation = this.getLocation();
+			try {
+				oFrame.contentWindow.bNullHeight = (oFrame.contentWindow.document.body.scrollHeight + oFrame.contentWindow.document.body.offsetHeight - oFrame.contentWindow.document.body.clientHeight == 0);
+				oFrame.contentWindow.bLoaded = true;
+				if (sLocation === sUrlPortal___ || sLocation === sUrlPortalyyy) {
+					this.setLoadMode(oFrame.contentWindow.__frameContent);
+				} else if (sLocation === sUrlLogin) {
+					test.portal.showLogin();
+				} else if (sLocation !== sUrlRestoreRequest) {
+					window.__frameContent = sLocation;
+					oResponse = test.menu.validateUrl(sLocation);
+					if (oResponse) {
+						switch (oResponse.result) {
+						case '1':
+							test.menu.activateAccordion(oResponse.path);
+							break;
+						case '-1':
+							test.portal.changePortal();
+							break;
+						case '0':
+							break;
+						default:
+						}
+					}
+					try {
+						bEventTakenCareOf = false;
+						sCurrentPathname = oFrame.contentWindow.location.pathname;
+						if (oFrame.contentWindow.document) {
+							oFrame.contentWindow.document.addEvent('click', function (ev) {
+								var oEventElement,
+								sUrl;
+								if (ev.type === 'click') {
+									if (ev.target.tagName === 'IMG') {
+										oEventElement = ev.target.parentNode;
+									} else {
+										oEventElement = ev.target;
+									}
+									if (oEventElement.tagName === 'A') {
+										if (oEventElement.protocol === 'mailto:') {
+											bEventTakenCareOf = true;
+										} else if (oEventElement.protocol === 'javascript:') {
+											bEventTakenCareOf = true;
+										} else {
+											if (oEventElement.pathname !== undefined) {
+												bEventTakenCareOf = true;
+												if (oEventElement.pathname.toLowerCase().indexOf('.jsp') !== -1) {
+													sUrl = '';
+													if (Browser.Engine.name == 'trident' || Browser.Engine.name == 'presto') {
+														sUrl = '/';
+													}
+													sUrl = sUrl + oEventElement.pathname + oEventElement.search;
+													setLoadMode();
+													oResponse = test.menu.validateUrl(sUrl);
+													if (oResponse) {
+														switch (oResponse.result) {
+														case '1':
+															test.menu.activateAccordion(oResponse.path);
+															break;
+														case '-1':
+															ev.preventDefault();
+															test.portal.changePortal();
+															break;
+														case '0':
+															break;
+														default:
+														}
+													}
+												}
+											}
+										}
+									}
+								}
+							});
+							oFrame.contentWindow.addEvent('unload', function (ev) {
+								var oLocation,
+								sUrl;
+								if (!bEventTakenCareOf) {
+									oLocation = oFrame.contentWindow.location;
+									if (oLocation.protocol === 'mailto:') {}
+									else if (oLocation.protocol === 'javascript:') {}
+									else {
+										switch (oLocation.pathname) {
+										case sUrlGenericUpdate:
+											break;
+										case sCurrentPathname:
+											setLoadMode();
+											break;
+										default:
+											if (oLocation.pathname.toLowerCase().indexOf('.jsp') !== -1) {
+												sUrl = '';
+												if (Browser.Engine.name == 'trident' || Browser.Engine.name == 'presto') {
+													sUrl = '/';
+												}
+												sUrl = sUrl + oLocation.pathname + oLocation.search;
+												setLoadMode();
+												oResponse = test.menu.validateUrl(sUrl);
+												if (oResponse) {
+													switch (oResponse.result) {
+													case '1':
+														test.menu.activateAccordion(oResponse.path);
+														break;
+													case '-1':
+														test.portal.changePortal();
+														break;
+													case '0':
+														break;
+													default:
+													}
+												}
+											}
+										}
+									}
+								}
+							});
+							oFrame.contentWindow.addEvent('resize', function (ev) {
+								test.frameBody.resize();
+							});
+							aoForms = oFrame.contentWindow.document.forms;
+							if (aoForms.length) {
+								for (i = 0; i < aoForms.length; i++) {
+									if (aoForms[i].submit.tagname === undefined) {
+										aoForms[i].nativeSubmit = aoForms[i].submit;
+										aoForms[i].submit = function () {
+											var bResult = formSubmit(this);
+											bEventTakenCareOf = true;
+											if (bResult) {
+												this.nativeSubmit();
+											}
+										};
+									}
+								}
+							}
+							if (oFrame.contentWindow.document.body) {
+								aoChildNodes = oFrame.contentWindow.document.body.childNodes;
+								bKeepGoing = true;
+								for (i = 0; i < aoChildNodes.length && bKeepGoing; i++) {
+									if (aoChildNodes[i].tagName !== 'SCRIPT' && aoChildNodes[i].tagName !== '!') {
+										if (aoChildNodes[i].tagName !== 'DIV') {
+											bKeepGoing = false;
+										} else {
+											if (!(aoChildNodes[i].__top && aoChildNodes[i].__top.toLowerCase() === 'nochange')) {
+												if (aoChildNodes[i].style.position !== 'static' && aoChildNodes[i].style.top !== 0) {
+													aoChildNodes[i].style.top = 0;
+													if (aoChildNodes[i].style.position === 'absolute') {
+														aoChildNodes[i].style.position = 'relative';
+													}
+												}
+											}
+										}
+									}
+								}
+							}
+						}
+					} catch (e) {}
+					resetLoadMode();
+				} else {
+					reverseLoadMode();
+				}
+			} catch (e) {
+				test.frameBody.resize();
+				resetLoadMode();
+			}
+		},
+		resize: function () {
+			var bWindowSizeChanged = test.portal.offsetChanged(),
+			bContentHeighChanged = false,
+			bContentWidthChanged = false,
+			iDiffWidth = 0,
+			iNewHeight = 0,
+			iNewWidth = 0,
+			i = 0,
+			iMaxHeight = 0,
+			iMaxWidth = 0,
+			oContentBody;
+			try {
+				oContentBody = oFrame.contentWindow.document.body;
+				if (oFrame.contentWindow.bNullHeight) {
+					if (bWindowSizeChanged || oFrame.contentWindow.bLoaded) {
+						for (i = 0; i < oContentBody.childNodes.length - 1; i++) {
+							if (oContentBody.childNodes(i).style.display != 'none') {
+								iNewHeight = oContentBody.childNodes(i).offsetTop + oContentBody.childNodes(i).scrollHeight + oContentBody.childNodes(i).offsetHeight - oContentBody.childNodes(i).clientHeight;
+								if (iMaxHeight < iNewHeight) {
+									iMaxHeight = iNewHeight;
+								}
+								iNewWidth = oContentBody.childNodes(i).offsetLeft + oContentBody.childNodes(i).scrollWidth + oContentBody.childNodes(i).offsetWidth - oContentBody.childNodes(i).clientWidth;
+								if (iMaxWidth < iNewWidth) {
+									iMaxWidth = iNewWidth;
+								}
+							}
+						}
+						iMaxWidth += oFrame.offsetLeft - (+oContentBody.leftMargin);
+						oFrame.style.height = String(iMaxHeight) + 'px';
+						oFrame.style.width = '100%';
+						test.portal.setMinWidth(iMaxWidth);
+						oFrame.contentWindow.bLoaded = false;
+					}
+				} else {
+					var objContentScroll = (oFrame.contentDocument) ? oFrame.contentDocument : oFrame.contentWindow.document;
+					var curScrollHeight = Math.min(objContentScroll.documentElement.scrollHeight, objContentScroll.body.scrollHeight);
+					if (iContentScrollHeigth !== curScrollHeight) {
+						iContentScrollHeigth = curScrollHeight;
+						bContentHeighChanged = true;
+					}
+					if (iContentScrollWidth !== oContentBody.scrollWidth) {
+						iContentScrollWidth = oContentBody.scrollWidth;
+						bContentWidthChanged = true;
+					}
+					if (bWindowSizeChanged || bContentWidthChanged) {
+						test.portal.setMaxWidth();
+						iDiffWidth = oContentBody.scrollWidth - oContentBody.clientWidth;
+						if (iDiffWidth > 0) {
+							iNewWidth = oFrame.offsetLeft;
+							iNewWidth += oContentBody.scrollWidth + oContentBody.offsetWidth - oContentBody.clientWidth;
+							iNewWidth += oContentBody.offsetLeft;
+							iNewWidth -= 1;
+							test.portal.setMinWidth(iNewWidth);
+						}
+					}
+					if (bWindowSizeChanged || bContentHeighChanged || bContentWidthChanged) {
+						oContentBody.style.marginBottom = "0px";
+						oContentBody.style.marginLeft = "0px";
+						oContentBody.style.marginRight = "0px";
+						oFrame.style.height = String(curScrollHeight + 15) + 'px';
+					}
+				}
+			} catch (e) {
+				oFrame.height = sDefaultHeight;
+			}
+		},
+		refresh: function () {
+			if (oFrame.contentWindow) {
+				this.setLoadMode();
+				oFrame.contentWindow.location.reload(true);
+			}
+		},
+		setEventTakenCareOf: function () {
+			bEventTakenCareOf = true;
+		}
+	};
+}
+();
+test.ajax = function () {
+	var oRequestSync,
+	oRequestSyncJSON,
+	oResponseJSON,
+	sResponse,
+	getResponse = function (responseText, responseXML) {
+		sResponse = responseText;
+	};
+	getResponseJSON = function (responseJSON, responseText) {
+		oResponseJSON = responseJSON;
+	};
+	function createRequest(ai_bAsync) {
+		return new Request({
+			link: 'cancel',
+			async: ai_bAsync,
+			onSucc___: getResponse
+		});
+	}
+	function createRequestJSON(ai_bAsync) {
+		return new Request.JSON({
+			link: 'cancel',
+			async: ai_bAsync,
+			onSucc___: getResponseJSON
+		});
+	}
+	function send(ai_bJSON, ai_bAsync, ai_sUrl, ai_saParams) {
+		var i,
+		sParams = '';
+		if (ai_saParams && ai_saParams.length !== 0) {
+			for (i = 0; i < ai_saParams.length; i++) {
+				if (sParams !== '') {
+					sParams += '&';
+				}
+				sParams += ai_saParams[i][0] + '=' + encodeURIComponent(ai_saParams[i][1]);
+			}
+		}
+		if (ai_bJSON) {
+			if (!oRequestSyncJSON) {
+				oRequestSyncJSON = createRequestJSON(ai_bAsync);
+			}
+			oRequestSyncJSON.send({
+				url: ai_sUrl,
+				data: sParams
+			});
+		} else {
+			if (!oRequestSync) {
+				oRequestSync = createRequest(ai_bAsync);
+			}
+			oRequestSync.send({
+				url: ai_sUrl,
+				data: sParams
+			});
+		}
+	}
+	return {
+		sendSync: function (ai_sUrl, ai_saParams) {
+			send(false, false, ai_sUrl, ai_saParams);
+		},
+		sendAsync: function (ai_sUrl, ai_saParams) {
+			send(false, true, ai_sUrl, ai_saParams);
+		},
+		getResponse: function () {
+			return sResponse;
+		},
+		sendSyncJSON: function (ai_sUrl, ai_saParams) {
+			send(true, false, ai_sUrl, ai_saParams);
+		},
+		sendAsyncJSON: function (ai_sUrl, ai_saParams) {
+			send(true, true, ai_sUrl, ai_saParams);
+		},
+		getResponseJSON: function () {
+			return oResponseJSON;
+		}
+	};
+}
+();
+test.IE6 = (Browser.Engine.name == 'trident' && Browser.Engine.version == '4');
+window.addEvent('domready', function () {
+	var oBody = $('allbody');
+	if (oBody) {
+		oBody.addEvent('keydown',function (ev) {
+				if (ev.key == 'f5' && (!ev.control)) {
+					ev.preventDefault();
+					test.frameBody.refresh();
+				}
+			});
+		oBody.addEvent('click', function (ev) {
+				test.menu.interceptEvent(ev);
+			}
+		);
+	}
+	$('showMenu').addEvent('click', function (ev) {
+		test.portal.toggleMenu(ev);
+	});
+	$('hideMenu').addEvent('click', function (ev) {
+		test.portal.toggleMenu(ev);
+	});
+	window.addEvent('unload', function (ev) {
+		test.frameBody.setEventTakenCareOf();
+	});
+});
+function isIE6() {
+	if (test.IE6) {
+		var oColimgs = $$('img');
+		var i = 0;
+		for (i = 0; i < oColimgs.length; i++) {
+			if (oColimgs[i].src && oColimgs[i].src.substring(oColimgs[i].src.length - 3) == 'png') {
+				oColimgs[i].src = oColimgs[i].src.substring(0, oColimgs[i].src.length - 3) + 'gif'
+			};
+			if (oColimgs[i].__SrcHot && oColimgs[i].__SrcHot.substring(oColimgs[i].__SrcHot.length - 3) == 'png') {
+				oColimgs[i].__SrcHot = oColimgs[i].__SrcHot.substring(0, oColimgs[i].__SrcHot.length - 3) + 'gif'
+			};
+			if (oColimgs[i].__SrcNormal && oColimgs[i].__SrcNormal.substring(oColimgs[i].__SrcNormal.length - 3) == 'png') {
+				oColimgs[i].__SrcNormal = oColimgs[i].__SrcNormal.substring(0, oColimgs[i].__SrcNormal.length - 3) + 'gif'
+			};
+		}
+	}
+}